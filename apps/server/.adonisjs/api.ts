// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type ApiAdminDilemmasIdApprovePut = {
  request: unknown
  response: MakeTuyauResponse<import('../app/admin/controllers/toggle_dilemma_approve_controller.ts').default['execute'], false>
}
type ApiAdminDilemmasIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/admin/controllers/update_dilemma_controller.ts').default['validator']>>
  response: MakeTuyauResponse<import('../app/admin/controllers/update_dilemma_controller.ts').default['execute'], true>
}
type ApiAdminUsersGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/admin/controllers/list_user_controller.ts').default['execute'], false>
}
type ApiAdminUsersIdPut = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/admin/controllers/update_user_controller.ts').default['validator']>>
  response: MakeTuyauResponse<import('../app/admin/controllers/update_user_controller.ts').default['execute'], true>
}
type ApiAuthMeGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/user_info_controller.ts').default['me'], false>
}
type ApiAuthRedirectGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/discord_controller.ts').default['redirect'], false>
}
type ApiAuthCallbackGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/discord_controller.ts').default['callback'], false>
}
type ApiAuthLogoutPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/logout_controller.ts').default['execute'], false>
}
type ApiDilemmasVotePost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/vote/controllers/vote_dilemma_controller.ts').default['validator']>>
  response: MakeTuyauResponse<import('../app/vote/controllers/vote_dilemma_controller.ts').default['execute'], true>
}
type ApiDilemmasPickGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/vote/controllers/pick_dilemma_controller.ts').default['execute'], false>
}
type ApiDilemmasIdIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/vote/controllers/show_dilemma_controller.ts').default['execute'], false>
}
type ApiDilemmasPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/vote/controllers/store_dilemma_controller.ts').default['#validator']>>
  response: MakeTuyauResponse<import('../app/vote/controllers/store_dilemma_controller.ts').default['execute'], true>
}
type ApiPropositionsUploadPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/vote/controllers/upload_proposition_image_controller.ts').default['#validator']>>
  response: MakeTuyauResponse<import('../app/vote/controllers/upload_proposition_image_controller.ts').default['execute'], true>
}
type ApiDilemmasGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/vote/controllers/list_dilemma_controller.ts').default['execute'], false>
}
export interface ApiDefinition {
  'api': {
    'admin': {
      'dilemmas': {
        ':id': {
          'approve': {
            '$url': {
            };
            '$put': ApiAdminDilemmasIdApprovePut;
          };
          '$url': {
          };
          '$put': ApiAdminDilemmasIdPut;
        };
      };
      'users': {
        '$url': {
        };
        '$get': ApiAdminUsersGetHead;
        '$head': ApiAdminUsersGetHead;
        ':id': {
          '$url': {
          };
          '$put': ApiAdminUsersIdPut;
        };
      };
    };
    'auth': {
      'me': {
        '$url': {
        };
        '$get': ApiAuthMeGetHead;
        '$head': ApiAuthMeGetHead;
      };
      'redirect': {
        '$url': {
        };
        '$get': ApiAuthRedirectGetHead;
        '$head': ApiAuthRedirectGetHead;
      };
      'callback': {
        '$url': {
        };
        '$get': ApiAuthCallbackGetHead;
        '$head': ApiAuthCallbackGetHead;
      };
      'logout': {
        '$url': {
        };
        '$post': ApiAuthLogoutPost;
      };
    };
    'dilemmas': {
      'vote': {
        '$url': {
        };
        '$post': ApiDilemmasVotePost;
      };
      'pick': {
        '$url': {
        };
        '$get': ApiDilemmasPickGetHead;
        '$head': ApiDilemmasPickGetHead;
      };
      ':firstProp': {
        ':secondProp': {
          '$url': {
          };
          '$get': ApiDilemmasIdIdGetHead;
          '$head': ApiDilemmasIdIdGetHead;
        };
      };
      '$url': {
      };
      '$post': ApiDilemmasPost;
      '$get': ApiDilemmasGetHead;
      '$head': ApiDilemmasGetHead;
    };
    'propositions': {
      'upload': {
        '$url': {
        };
        '$post': ApiPropositionsUploadPost;
      };
    };
  };
}
const routes = [
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
